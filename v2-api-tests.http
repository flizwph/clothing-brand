### Переменные
@baseUrl = http://localhost:8080
@accessToken = eyJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl92ZXJzaW9uIjoxLCJzdWIiOiLQvdC-0LLQvtC1X9C40LzRjyIsImlhdCI6MTc0NjU0MzcyOSwiZXhwIjoxNzQ2NTQ3MzI5fQ.4ufvGOqRqERxLx3qm5omIou3KBDgjurMjiwn1-pBmg8
@refreshToken = 3a991faa-6823-4127-8c16-7efa262663b2

### ====================== ТЕСТИРОВАНИЕ AUTH API v2 ======================

### 1. Регистрация нового пользователя (v2)
POST {{baseUrl}}/api/auth/v2/register
Content-Type: application/json

{
  "username": "test_user_v23",
  "password": "password123"
}

### 2. Вход в систему через v2 API
POST {{baseUrl}}/api/auth/v2/login
Content-Type: application/json

{
  "username": "test_user_v23",
  "password": "password123"
}

### 3. Проверка валидности токена через v2 API
GET {{baseUrl}}/api/auth/v2/validate-token
Authorization: Bearer {{accessToken}}

### 4. Обновление токена через v2 API
POST {{baseUrl}}/api/auth/v2/refresh
Content-Type: application/json

{
  "refreshToken": "{{refreshToken}}"
}

### 5. Изменение пароля (только в v2 API)
POST {{baseUrl}}/api/auth/v2/change-password
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
  "currentPassword": "password123",
  "newPassword": "newPassword456"
}

### 6. Выход из системы через v2 API
POST {{baseUrl}}/api/auth/v2/logout
Authorization: Bearer {{accessToken}}

### ====================== ТЕСТИРОВАНИЕ LEGACY API (ПРОКСИ) ======================

### 7. Регистрация через устаревший API с перенаправлением на v2
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "username": "legacy_user",
  "password": "password123"
}

### 8. Вход через устаревший API с перенаправлением на v2
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "username": "legacy_user",
  "password": "password123"
}

### 9. Проверка токена через устаревший API с перенаправлением на v2
POST {{baseUrl}}/api/auth/token/validate
Content-Type: application/json

{
  "token": "{{accessToken}}"
}

### 10. Обновление токена через устаревший API с перенаправлением на v2
POST {{baseUrl}}/api/auth/refresh
Content-Type: application/json

{
  "refreshToken": "{{refreshToken}}"
}

### 11. Выход из системы через устаревший API с перенаправлением на v2
POST {{baseUrl}}/api/auth/logout
Content-Type: application/json
Authorization: Bearer {{accessToken}}

### ====================== ТЕСТИРОВАНИЕ РАЗНЫХ НАСТРОЕК В application.properties ======================

### 12. Проверка режима работы при api.legacy.redirect-enabled=true
# Должно происходить перенаправление на v2 API

### 13. Проверка режима работы при api.legacy.redirect-enabled=false и api.legacy.direct-implementation=true
# Должны использоваться оригинальные контроллеры v1

### 14. Проверка режима работы при api.legacy.redirect-enabled=false и api.legacy.direct-implementation=false
# Должен возвращаться статус 410 Gone с сообщением об устаревшем API

### ====================== ТЕСТИРОВАНИЕ ДРУГИХ API ======================

### 15. Получение баланса пользователя
GET {{baseUrl}}/api/balance
Authorization: Bearer {{accessToken}}

### 16. Запрос на пополнение баланса
POST {{baseUrl}}/api/balance/deposit
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
  "amount": 500.00
}

### 17. Получение транзакций пользователя
GET {{baseUrl}}/api/balance/transactions
Authorization: Bearer {{accessToken}}

### 18. Создание заказа
POST {{baseUrl}}/api/orders
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{

  "productId": 2,
  "size": "L",
  "color": "серый",
  "quantity": 1,
    "deliveryAddress": {
    "country": "Россия",
    "city": "Москва",
    "street": "Ленина",
    "house": "10",
    "apartment": "42",
    "postalCode": "123456"
  },
  "paymentMethod": "BALANCE",
  "promoCode": "SUMMER2025"
}

### ====================== ИНСТРУКЦИЯ ПО ИСПОЛЬЗОВАНИЮ ======================
# 
# 1. Установите VSCode с расширением REST Client
# 2. Запустите приложение с Maven: mvn spring-boot:run
# 3. Выполните тесты в указанном порядке
# 4. Для аутентификации:
#    - Выполните тест #2 (вход в v2)
#    - Скопируйте полученный access token в переменную @accessToken
#    - Скопируйте полученный refresh token в переменную @refreshToken
# 5. Для тестирования разных конфигураций:
#    - Измените параметры в application.properties
#    - Перезапустите приложение
#    - Выполните тесты 12-14
#
# Примечание: Токены имеют ограниченный срок действия. Если получаете ошибку 401,
# необходимо снова выполнить вход и обновить токены. 