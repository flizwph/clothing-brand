upstream backend {
    # Динамическое обнаружение сервисов приложения
    server app:8080;
    # При добавлении новых реплик приложения, они будут автоматически использоваться
    # благодаря DNS round-robin, встроенному в Docker
}

server {
    listen 80;
    server_name _;

    # Добавляем заголовки безопасности
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Небольшой кэш для статических ресурсов
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m max_size=1g inactive=60m;
    proxy_cache_key "$scheme$request_method$host$request_uri";
    
    # Настройка для проверки здоровья NGINX
    location /health {
        access_log off;
        return 200 "healthy\n";
    }
    
    # Проксирование запросов к API
    location /api/ {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_pragma;
        proxy_cache_revalidate on;
        proxy_cache api_cache;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        
        # Защита от атак с перегрузкой соединений
        limit_conn conn_limit_per_ip 20;
        limit_req zone=req_limit_per_ip burst=20 nodelay;
    }
    
    # Доступ к метрикам только из внутренней сети
    location /actuator/ {
        allow 127.0.0.1;
        allow 172.16.0.0/12;  # Docker internal network
        deny all;
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Корневой маршрут для фронтенда (можно добавить позже)
    location / {
        return 200 "Welcome to the API Gateway";
    }
    
    # Лимиты соединений и запросов для защиты от DoS атак
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;
} 