<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.4</version>
        <relativePath/>
    </parent>

    <groupId>org.clothingstore</groupId>
    <artifactId>clothing-brand</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>clothing-brand</name>
    <description>clothing-brand</description>

    <properties>
        <java.version>17</java.version>
        <vk.version>1.0.14</vk.version>
        <jjwt.version>0.11.5</jjwt.version>
    </properties>

    <dependencies>
        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- Database (PostgreSQL) -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <!-- H2 Database for Development -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Telegram Bot -->
        <dependency>
            <groupId>org.telegram</groupId>
            <artifactId>telegrambots</artifactId>
            <version>6.6.0</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Validation -->
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>3.0.2</version>
        </dependency>

        <!-- JPA API -->
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <version>3.1.0</version>
        </dependency>

        <!-- JWT (JSON Web Token) -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>${jjwt.version}</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>${jjwt.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>${jjwt.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- JAXB (для Jackson и Hibernate) -->
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>4.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>4.0.5</version>
        </dependency>

        <!-- Jakarta Annotation API -->
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>2.1.1</version>
        </dependency>

        <!-- Lombok -->
        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.34</version>
            <scope>provided</scope>
        </dependency>

        <!-- OpenAPI (Swagger UI) -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.4.0</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Тестирование -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Apache Commons -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <!-- Hibernate -->
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>6.4.0.Final</version>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
        </dependency>
        <!--VK-->
        <dependency>
            <groupId>com.vk.api</groupId>
            <artifactId>sdk</artifactId>
            <version>${vk.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Cache -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
        </dependency>
        
        <!-- Sessions -->
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-core</artifactId>
        </dependency>

        <!-- User-Agent Parser -->
        <dependency>
            <groupId>eu.bitwalker</groupId>
            <artifactId>UserAgentUtils</artifactId>
            <version>1.21</version>
        </dependency>

        <!-- Google Guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>31.1-jre</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <classifier>exec</classifier>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>1.18.34</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- Профили для различных типов сборки -->
    <profiles>
        <!-- Профиль для обфускации продакшен сборки -->
        <profile>
            <id>obfuscated</id>
            <properties>
                <maven.test.skip>true</maven.test.skip>
            </properties>
            <build>
                <plugins>
                    <!-- ProGuard Plugin для обфускации -->
                    <plugin>
                        <groupId>com.github.wvengen</groupId>
                        <artifactId>proguard-maven-plugin</artifactId>
                        <version>2.6.0</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>proguard</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <proguardVersion>7.2.2</proguardVersion>
                            <injar>${project.build.finalName}-exec.jar</injar>
                            <outjar>${project.build.finalName}-obfuscated.jar</outjar>
                            <includeDependency>false</includeDependency>
                            <libs>
                                <lib>${java.home}/jmods/java.base.jmod(!**.jar;!module-info.class)</lib>
                                <lib>${java.home}/jmods/java.desktop.jmod(!**.jar;!module-info.class)</lib>
                                <lib>${java.home}/jmods/java.logging.jmod(!**.jar;!module-info.class)</lib>
                                <lib>${java.home}/jmods/java.management.jmod(!**.jar;!module-info.class)</lib>
                                <lib>${java.home}/jmods/java.naming.jmod(!**.jar;!module-info.class)</lib>
                                <lib>${java.home}/jmods/java.sql.jmod(!**.jar;!module-info.class)</lib>
                                <lib>${java.home}/jmods/java.xml.jmod(!**.jar;!module-info.class)</lib>
                            </libs>
                            <options>
                                <option>-dontshrink</option>
                                <option>-dontoptimize</option>
                                <option>-ignorewarnings</option>
                                <option>-dontnote</option>
                                
                                <!-- Сохраняем главный класс -->
                                <option>-keep public class com.brand.backend.applicationstart.ClothingBrandApplication {
                                    public static void main(java.lang.String[]);
                                }</option>
                                
                                <!-- Сохраняем Spring Boot классы -->
                                <option>-keep @org.springframework.boot.autoconfigure.SpringBootApplication class * { *; }</option>
                                <option>-keep @org.springframework.stereotype.Component class * { *; }</option>
                                <option>-keep @org.springframework.stereotype.Service class * { *; }</option>
                                <option>-keep @org.springframework.stereotype.Repository class * { *; }</option>
                                <option>-keep @org.springframework.web.bind.annotation.RestController class * { *; }</option>
                                <option>-keep @org.springframework.web.bind.annotation.Controller class * { *; }</option>
                                <option>-keep @org.springframework.context.annotation.Configuration class * { *; }</option>
                                
                                <!-- Сохраняем JPA сущности -->
                                <option>-keep @jakarta.persistence.Entity class * { *; }</option>
                                <option>-keep @jakarta.persistence.Table class * { *; }</option>
                                <option>-keep @jakarta.persistence.Embeddable class * { *; }</option>
                                
                                <!-- Сохраняем методы с аннотациями -->
                                <option>-keepclassmembers class * {
                                    @org.springframework.web.bind.annotation.RequestMapping *;
                                    @org.springframework.web.bind.annotation.GetMapping *;
                                    @org.springframework.web.bind.annotation.PostMapping *;
                                    @org.springframework.web.bind.annotation.PutMapping *;
                                    @org.springframework.web.bind.annotation.DeleteMapping *;
                                    @org.springframework.web.bind.annotation.PatchMapping *;
                                    @org.springframework.beans.factory.annotation.Autowired *;
                                    @jakarta.persistence.* *;
                                }</option>
                                
                                <!-- Сохраняем DTO классы -->
                                <option>-keep class com.brand.backend.presentation.rest.dto.** { *; }</option>
                                
                                <!-- Сохраняем модели -->
                                <option>-keep class com.brand.backend.domain.**.model.** { *; }</option>
                                
                                <!-- Сохраняем enum'ы -->
                                <option>-keepclassmembers,allowoptimization enum * {
                                    public static **[] values();
                                    public static ** valueOf(java.lang.String);
                                }</option>
                                
                                <!-- Сохраняем Lombok сгенерированные методы -->
                                <option>-keep class * {
                                    *** get*();
                                    *** set*(***);
                                    *** is*();
                                }</option>
                                
                                <!-- Сохраняем Serializable -->
                                <option>-keepclassmembers class * implements java.io.Serializable {
                                    static final long serialVersionUID;
                                    private static final java.io.ObjectStreamField[] serialPersistentFields;
                                    private void writeObject(java.io.ObjectOutputStream);
                                    private void readObject(java.io.ObjectInputStream);
                                    java.lang.Object writeReplace();
                                    java.lang.Object readResolve();
                                }</option>
                                
                                <!-- Защита от декомпиляции -->
                                <option>-renamesourcefileattribute SourceFile</option>
                                <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod</option>
                                
                                <!-- Обфускация имен пакетов -->
                                <option>-repackageclasses 'obfuscated'</option>
                                <option>-allowaccessmodification</option>
                                
                                <!-- Исключения для рефлексии -->
                                <option>-keep class org.springframework.** { *; }</option>
                                <option>-keep class org.hibernate.** { *; }</option>
                                <option>-keep class jakarta.** { *; }</option>
                                <option>-keep class javax.** { *; }</option>
                                <option>-keep class com.fasterxml.jackson.** { *; }</option>
                            </options>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>com.guardsquare</groupId>
                                <artifactId>proguard-base</artifactId>
                                <version>7.2.2</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
