logging.level.root=WARN
logging.level.com.brand.backend=INFO
logging.level.org.springframework=WARN
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.hibernate.type.descriptor.sql=WARN
logging.level.org.hibernate=INFO
logging.level.com.zaxxer.hikari=WARN

# ===================================================================
# Database Configuration
# ===================================================================
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/clothingbrand}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:root}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.types.print.banner=false
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

# ===================================================================
# RoboKassa Configuration
# ===================================================================
robokassa.test-mode=${ROBOKASSA_TEST_MODE:true}
robokassa.merchant-login=${ROBOKASSA_MERCHANT_LOGIN:}
robokassa.test.password1=${ROBOKASSA_TEST_PASSWORD1:}
robokassa.test.password2=${ROBOKASSA_TEST_PASSWORD2:}
robokassa.production.password1=${ROBOKASSA_PASSWORD1:}
robokassa.production.password2=${ROBOKASSA_PASSWORD2:}
robokassa.payment-url=https://auth.robokassa.ru/Merchant/Index.aspx
robokassa.result-url=${BASE_URL:http://localhost:8080}/api/payments/robokassa/result
robokassa.success-url=${BASE_URL:http://localhost:8080}/payment/success
robokassa.fail-url=${BASE_URL:http://localhost:8080}/payment/fail
robokassa.hash-algorithm=MD5
robokassa.culture=ru
robokassa.encoding=UTF-8

jwt.secret=${JWT_SECRET:}
jwt.expiration=${JWT_EXPIRATION:3600000}
jwt.refreshExpiration=${JWT_REFRESH_EXPIRATION:604800000}

# ===================================================================
# Admin Bot Configuration (SECURED)
# ===================================================================
admin.bot.adminIds=${ADMIN_BOT_ADMIN_IDS:825885701,916948327}
admin.bot.enabled=${ADMIN_BOT_ENABLED:true}
admin.bot.token=${ADMIN_BOT_TOKEN:8128109379:AAGULxJJzL9XwG0aCxFbrDMdso4dVvSjndI}
admin.bot.username=${ADMIN_BOT_USERNAME:@obliviumadministrator_bot}

# ===================================================================
# User Bot Configuration (SECURED)
# ===================================================================
telegram.bot.enabled=${TELEGRAM_BOT_ENABLED:true}
telegram.bot.token=${TELEGRAM_BOT_TOKEN:7966511776:AAH5rqOuMVme5-irMuHKOk2Od88s97oGCJc}
telegram.bot.username=${TELEGRAM_BOT_USERNAME:@obl1vium_bot}

# ===================================================================
# VK Bot Configuration
# ===================================================================
vk.access-token=${VK_ACCESS_TOKEN:}
vk.group-id=${VK_GROUP_ID:}
vk.secret-key=${VK_SECRET_KEY:}
vk.confirmation-token=${VK_CONFIRMATION_TOKEN:}
vk.api-version=5.131
vk.webhook-url=${VK_WEBHOOK_URL:}
vk.enabled=${VK_BOT_ENABLED:false}
vk.long-poll-timeout=25

# ===================================================================
# Discord Configuration (SECURED)
# ===================================================================
api.discord.secret-key=${DISCORD_API_SECRET:}

spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.keepalive-time=60000
spring.datasource.hikari.idle-timeout=600000

spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true

# ===================================================================
# Security Settings
# ===================================================================
security.login.max-attempts=10
security.login.block-duration-minutes=5
security.alert.login-failure-threshold=10
security.alert.time-window-minutes=10
security.alert.email.admin-email=${ADMIN_EMAIL:}
security.alert.email.enabled=${EMAIL_ALERTS_ENABLED:false}
security.alert.email.from=${ALERT_FROM_EMAIL:}

# ===================================================================
# Server Configuration
# ===================================================================
server.port=${SERVER_PORT:8080}
spring.main.allow-circular-references=true
spring.main.allow-bean-definition-overriding=true
spring.flyway.enabled=false

# ===================================================================
# API Configuration
# ===================================================================
api.legacy.deprecation-message=This API endpoint is deprecated. Please use /api/auth/v2 endpoints instead.
api.legacy.redirect-enabled=false
api.legacy.direct-implementation=false

# Платежные реквизиты для банковских переводов
payment.cardNumber=5536914012345678
payment.cardholderName=ООО "ВЕБ ОБЛИВИУМ"
payment.bankName=Сбербанк России

# ===================================================================
# Email Configuration (SECURED)  
# ===================================================================
spring.mail.host=${MAIL_HOST:smtp.yandex.ru}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true