package com.brand.backend.application.payment.service;

import com.brand.backend.domain.balance.model.Transaction;
import com.brand.backend.infrastructure.config.PaymentProperties;
import com.brand.backend.infrastructure.integration.telegram.admin.AdminTelegramBot;
import lombok.extern.slf4j.Slf4j;
import org.springframework.context.ApplicationContext;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
 */
@Service
@Slf4j
public class AdminNotificationService {
    
    private final PaymentProperties paymentProperties;
    private final ApplicationContext applicationContext;
    
    public AdminNotificationService(PaymentProperties paymentProperties, ApplicationContext applicationContext) {
        this.paymentProperties = paymentProperties;
        this.applicationContext = applicationContext;
    }
    
    /**
     * –£–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –Ω–æ–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
     */
    public void notifyNewDepositRequest(Transaction transaction) {
        log.info("–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –æ –Ω–æ–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ: {}", transaction.getTransactionCode());
        
        String message = formatDepositNotification(transaction);
        
        // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
        InlineKeyboardMarkup keyboard = createDepositActionKeyboard(transaction.getId());
        
        try {
            // –ü–æ–ª—É—á–∞–µ–º AdminTelegramBot –∏–∑ ApplicationContext —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –æ–Ω –Ω—É–∂–µ–Ω
            AdminTelegramBot adminTelegramBot = applicationContext.getBean(AdminTelegramBot.class);
            
            // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω—Å–∫–∏—Ö —á–∞—Ç–æ–≤ –∏–∑ Telegram-–±–æ—Ç–∞
            List<Long> adminIds = adminTelegramBot.getAllowedAdminIds();
            for (Long chatId : adminIds) {
                sendMessageWithKeyboard(adminTelegramBot, chatId.toString(), message, keyboard);
            }
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º: {}", e.getMessage(), e);
        }
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
     */
    private void sendMessageWithKeyboard(AdminTelegramBot bot, String chatId, String text, InlineKeyboardMarkup keyboard) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(text);
        message.setParseMode("HTML");
        message.setReplyMarkup(keyboard);
        
        try {
            bot.execute(message);
        } catch (TelegramApiException e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram –∞–¥–º–∏–Ω—É {}: {}", chatId, e.getMessage(), e);
        }
    }
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º
     */
    private InlineKeyboardMarkup createDepositActionKeyboard(Long transactionId) {
        InlineKeyboardMarkup keyboardMarkup = new InlineKeyboardMarkup();
        
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
        
        // –†—è–¥ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π
        List<InlineKeyboardButton> row = new ArrayList<>();
        
        // –ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        InlineKeyboardButton confirmButton = new InlineKeyboardButton();
        confirmButton.setText("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å");
        confirmButton.setCallbackData("deposit_confirm_" + transactionId);
        row.add(confirmButton);
        
        // –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
        InlineKeyboardButton rejectButton = new InlineKeyboardButton();
        rejectButton.setText("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å");
        rejectButton.setCallbackData("deposit_reject_" + transactionId);
        row.add(rejectButton);
        
        keyboard.add(row);
        
        // –í—Ç–æ—Ä–æ–π —Ä—è–¥ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π
        List<InlineKeyboardButton> row2 = new ArrayList<>();
        
        // –ö–Ω–æ–ø–∫–∞ –¥–µ—Ç–∞–ª–µ–π
        InlineKeyboardButton detailsButton = new InlineKeyboardButton();
        detailsButton.setText("üìã –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏");
        detailsButton.setCallbackData("deposit_details_" + transactionId);
        row2.add(detailsButton);
        
        keyboard.add(row2);
        
        keyboardMarkup.setKeyboard(keyboard);
        return keyboardMarkup;
    }
    
    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞
     */
    private String formatDepositNotification(Transaction transaction) {
        BigDecimal amount = transaction.getAmount();
        
        return String.format(
                "<b>üîî –ù–û–í–û–ï –ü–û–ü–û–õ–ù–ï–ù–ò–ï –ë–ê–õ–ê–ù–°–ê</b>\n\n" +
                "<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> %s\n" +
                "<b>–°—É–º–º–∞:</b> %.2f ‚ÇΩ\n" +
                "<b>–ö–æ–¥ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:</b> <code>%s</code>\n\n" +
                "‚ùóÔ∏è <i>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ %.2f ‚ÇΩ –Ω–∞ –∫–∞—Ä—Ç—É %s —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º <code>%s</code></i>\n\n" +
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–µ–π",
                transaction.getUser().getUsername(),
                amount,
                transaction.getTransactionCode(),
                amount,
                paymentProperties.getCardNumber(),
                transaction.getTransactionCode()
        );
    }
} 