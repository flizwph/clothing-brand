package com.brand.backend.application.user.handler;

import com.brand.backend.infrastructure.integration.telegram.user.TelegramBotService;
import com.brand.backend.domain.user.event.UserEvent;
import com.brand.backend.domain.user.model.User;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.context.event.EventListener;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

@Slf4j
@Component
@RequiredArgsConstructor
public class UserEventHandler {

    private final TelegramBotService telegramBotService;

    @Async("eventExecutor")
    @EventListener
    public void handleUserEvent(UserEvent event) {
        User user = event.getUser();
        log.debug("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}, —Ç–∏–ø: {}", user.getUsername(), event.getEventType());
        
        try {
            switch (event.getEventType()) {
                case REGISTERED:
                    log.info("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}", user.getUsername());
                    break;
                    
                case UPDATED:
                    log.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–∏–ª –¥–∞–Ω–Ω—ã–µ: {}", user.getUsername());
                    break;
                    
                case LINKED_TELEGRAM:
                    log.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–≤—è–∑–∞–ª Telegram: {}", user.getUsername());
                    notifyUserTelegramLinked(user);
                    break;
                    
                case LINKED_DISCORD:
                    log.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–≤—è–∑–∞–ª Discord: {}", user.getUsername());
                    notifyUserDiscordLinked(user);
                    break;
                    
                case VERIFIED:
                    log.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: {}", user.getUsername());
                    break;
            }
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–±—ã—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", user.getUsername(), e.getMessage(), e);
        }
    }
    
    private void notifyUserTelegramLinked(User user) {
        if (user.getTelegramId() != null) {
            String message = "üîó –í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ Telegram!\n" +
                    "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–µ–ª–∞—Ç—å –ø–æ–∫—É–ø–∫–∏ –∏ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–∞—Ö —á–µ—Ä–µ–∑ –±–æ—Ç–∞.";
            
            SendMessage sendMessage = new SendMessage();
            sendMessage.setChatId(user.getTelegramId().toString());
            sendMessage.setText(message);
            
            try {
                telegramBotService.execute(sendMessage);
                log.info("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–≤—è–∑–∫–µ Telegram –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {}", user.getUsername());
            } catch (TelegramApiException e) {
                log.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–∏–≤—è–∑–∫–µ Telegram: {}", e.getMessage());
            }
        }
    }
    
    private void notifyUserDiscordLinked(User user) {
        if (user.getTelegramId() != null) {
            String message = "üîó –í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ Discord!";
            
            SendMessage sendMessage = new SendMessage();
            sendMessage.setChatId(user.getTelegramId().toString());
            sendMessage.setText(message);
            
            try {
                telegramBotService.execute(sendMessage);
                log.info("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–≤—è–∑–∫–µ Discord –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {}", user.getUsername());
            } catch (TelegramApiException e) {
                log.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–∏–≤—è–∑–∫–µ Discord: {}", e.getMessage());
            }
        }
    }
} 