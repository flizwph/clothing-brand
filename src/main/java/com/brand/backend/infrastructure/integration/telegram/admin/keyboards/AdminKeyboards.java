package com.brand.backend.infrastructure.integration.telegram.admin.keyboards;

import com.brand.backend.domain.order.model.Order;
import com.brand.backend.domain.order.model.OrderStatus;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

/**
 * –ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –±–æ—Ç–∞
 */
@Component
public class AdminKeyboards {

    /**
     * –°–æ–∑–¥–∞—ë—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞
     */
    public static InlineKeyboardMarkup createMainMenu() {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        
        // –ü–µ—Ä–≤—ã–π —Ä—è–¥
        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(createButton("üì¶ –ó–∞–∫–∞–∑—ã", "menu:orders"));
        row1.add(createButton("üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", "menu:users"));
        rows.add(row1);
        
        // –í—Ç–æ—Ä–æ–π —Ä—è–¥
        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(createButton("üéü –ü—Ä–æ–º–æ–∫–æ–¥—ã", "menu:promocodes"));
        row2.add(createButton("üõç –¢–æ–≤–∞—Ä—ã", "menu:products"));
        rows.add(row2);
        
        // –¢—Ä–µ—Ç–∏–π —Ä—è–¥
        List<InlineKeyboardButton> row3 = new ArrayList<>();
        row3.add(createButton("üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è", "menu:deposits"));
        row3.add(createButton("üîç –ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–∞", "menu:search"));
        rows.add(row3);
        
        // –ß–µ—Ç–≤–µ—Ä—Ç—ã–π —Ä—è–¥
        List<InlineKeyboardButton> row4 = new ArrayList<>();
        row4.add(createButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "menu:settings"));
        rows.add(row4);
        
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(rows);
        return markup;
    }

    /**
     * –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∑–∞–∫–∞–∑–æ–≤
     */
    public static InlineKeyboardMarkup createOrderFiltersKeyboard() {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        
        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(createButton("üîÑ –í—Å–µ", "filter:all"));
        row1.add(createButton("üÜï –ù–æ–≤—ã–µ", "filter:NEW"));
        rows.add(row1);
        
        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(createButton("‚è≥ –í –æ–±—Ä–∞–±–æ—Ç–∫–µ", "filter:PROCESSING"));
        row2.add(createButton("üì¶ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ", "filter:DISPATCHED"));
        rows.add(row2);
        
        List<InlineKeyboardButton> row3 = new ArrayList<>();
        row3.add(createButton("‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ", "filter:COMPLETED"));
        row3.add(createButton("‚ùå –û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ", "filter:CANCELLED"));
        rows.add(row3);
        
        List<InlineKeyboardButton> row4 = new ArrayList<>();
        row4.add(createButton("üìÜ –ó–∞ —Å–µ–≥–æ–¥–Ω—è", "filter:today"));
        row4.add(createButton("üìÖ –ó–∞ –Ω–µ–¥–µ–ª—é", "filter:week"));
        row4.add(createButton("üìÖ –ó–∞ –º–µ—Å—è—Ü", "filter:month"));
        rows.add(row4);
        
        List<InlineKeyboardButton> row5 = new ArrayList<>();
        row5.add(createButton("üîç –ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–∞", "filter:search"));
        rows.add(row5);
        
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(rows);
        return markup;
    }

    /**
     * –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
     */
    public static InlineKeyboardMarkup createStatusKeyboard(Order order) {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        
        for (OrderStatus status : OrderStatus.values()) {
            if (!status.equals(order.getStatus())) { // –Ω–µ –≤—ã–≤–æ–¥–∏–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
                InlineKeyboardButton button = createButton(
                    getStatusEmoji(status) + " " + status.name(),
                    "updateOrder:" + order.getId() + ":" + status.name()
                );
                rows.add(Collections.singletonList(button));
            }
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        List<InlineKeyboardButton> userRow = new ArrayList<>();
        userRow.add(createButton("üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ", "viewUser:" + order.getUser().getId()));
        rows.add(userRow);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥—Ä—É–≥–∏—Ö –∑–∞–∫–∞–∑–æ–≤ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        List<InlineKeyboardButton> userOrdersRow = new ArrayList<>();
        userOrdersRow.add(createButton("üßæ –ó–∞–∫–∞–∑—ã –∫–ª–∏–µ–Ω—Ç–∞", "userOrders:" + order.getUser().getId()));
        rows.add(userOrdersRow);
        
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(rows);
        return markup;
    }

    /**
     * –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     */
    public static InlineKeyboardMarkup createStatisticsKeyboard() {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        
        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(createButton("üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "stats:general"));
        row1.add(createButton("üíπ –ü—Ä–æ–¥–∞–∂–∏ –ø–æ –¥–Ω—è–º", "stats:daily"));
        rows.add(row1);
        
        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(createButton("üëë –¢–æ–ø –∫–ª–∏–µ–Ω—Ç–æ–≤", "stats:topUsers"));
        row2.add(createButton("üîù –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã", "stats:topProducts"));
        rows.add(row2);
        
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(rows);
        return markup;
    }

    /**
     * –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è NFT
     */
    public static InlineKeyboardMarkup createNFTKeyboard() {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        
        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(createButton("üé® –í—Å–µ NFT", "nft:all"));
        row1.add(createButton("üéÅ –ù–µ—Ä–∞—Å–∫—Ä—ã—Ç—ã–µ", "nft:unrevealed"));
        rows.add(row1);
        
        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(createButton("üîç –ü–æ–∏—Å–∫ –ø–æ –≤–ª–∞–¥–µ–ª—å—Ü—É", "nft:searchByUser"));
        rows.add(row2);
        
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(rows);
        return markup;
    }
    
    /**
     * –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏
     */
    public static InlineKeyboardMarkup createPromoCodesKeyboard() {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        
        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(createButton("üîñ –í—Å–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã", "promo:all"));
        row1.add(createButton("‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ", "promo:active"));
        rows.add(row1);
        
        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(createButton("‚ûï –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥", "promo:create"));
        rows.add(row2);
        
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(rows);
        return markup;
    }
    
    /**
     * –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ–º–æ–∫–æ–¥–∞
     */
    public static InlineKeyboardMarkup createPromoCodeDetailsKeyboard(Long promoId, boolean isActive) {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        
        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(createButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", "promo:edit:" + promoId));
        
        if (isActive) {
            row1.add(createButton("üö´ –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å", "promo:deactivate:" + promoId));
        } else {
            row1.add(createButton("‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å", "promo:activate:" + promoId));
        }
        rows.add(row1);
        
        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(createButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", "promo:delete:" + promoId));
        row2.add(createButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", "promo:all"));
        rows.add(row2);
        
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(rows);
        return markup;
    }
    
    /**
     * –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞–º–∏
     */
    public static InlineKeyboardMarkup createProductsKeyboard() {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        
        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(createButton("üëï –í—Å–µ —Ç–æ–≤–∞—Ä—ã", "product:all"));
        row1.add(createButton("üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞", "product:search"));
        rows.add(row1);
        
        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(createButton("‚ûï –°–æ–∑–¥–∞—Ç—å —Ç–æ–≤–∞—Ä", "product:create"));
        rows.add(row2);
        
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(rows);
        return markup;
    }
    
    /**
     * –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ—Ç–∞–ª–µ–π —Ç–æ–≤–∞—Ä–∞
     */
    public static InlineKeyboardMarkup createProductDetailsKeyboard(Long productId) {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        
        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(createButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", "product:edit:" + productId));
        row1.add(createButton("üí∞ –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É", "product:price:" + productId));
        rows.add(row1);
        
        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(createButton("üì¶ –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∞—Å—ã", "product:stock:" + productId));
        row2.add(createButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", "product:delete:" + productId));
        rows.add(row2);
        
        List<InlineKeyboardButton> row3 = new ArrayList<>();
        row3.add(createButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", "product:all"));
        rows.add(row3);
        
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(rows);
        return markup;
    }
    
    /**
     * –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
     */
    public static InlineKeyboardMarkup createUsersMenu() {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        
        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(createButton("üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "listUsers"));
        rows.add(row1);
        
        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(createButton("üîç –ü–æ–∏—Å–∫ –ø–æ —Å—Ç—Ä–æ–∫–µ", "searchUser"));
        rows.add(row2);
        
        List<InlineKeyboardButton> row3 = new ArrayList<>();
        row3.add(createButton("üë§ –ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏", "searchUserByName"));
        rows.add(row3);
        
        List<InlineKeyboardButton> row4 = new ArrayList<>();
        row4.add(createButton("‚úâÔ∏è –ü–æ–∏—Å–∫ –ø–æ email", "searchUserByEmail"));
        rows.add(row4);
        
        List<InlineKeyboardButton> row5 = new ArrayList<>();
        row5.add(createButton("üì± –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É", "searchUserByPhone"));
        rows.add(row5);
        
        List<InlineKeyboardButton> row6 = new ArrayList<>();
        row6.add(createButton("‚óÄÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "menu"));
        rows.add(row6);
        
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(rows);
        return markup;
    }
    
    /**
     * –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–∑–∞–¥
     */
    public static InlineKeyboardMarkup createBackKeyboard(String callback) {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        
        List<InlineKeyboardButton> row = new ArrayList<>();
        row.add(createButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback));
        rows.add(row);
        
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(rows);
        return markup;
    }
    
    /**
     * –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
     */
    public static InlineKeyboardMarkup createConfirmKeyboard(String action, String entityId) {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        
        List<InlineKeyboardButton> row = new ArrayList<>();
        row.add(createButton("‚úÖ –î–∞", action + ":confirm:" + entityId));
        row.add(createButton("‚ùå –ù–µ—Ç", action + ":cancel"));
        rows.add(row);
        
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(rows);
        return markup;
    }
    
    /**
     * –°–æ–∑–¥–∞—ë—Ç –∫–Ω–æ–ø–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º –∏ callback-–¥–∞–Ω–Ω—ã–º–∏
     */
    private static InlineKeyboardButton createButton(String text, String callbackData) {
        InlineKeyboardButton button = new InlineKeyboardButton();
        button.setText(text);
        button.setCallbackData(callbackData);
        return button;
    }
    
    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
     */
    private static String getStatusEmoji(OrderStatus status) {
        return switch (status) {
            case NEW -> "üÜï";
            case PROCESSING -> "‚è≥";
            case DISPATCHED -> "üì¶";
            case COMPLETED -> "‚úÖ";
            case CANCELLED -> "‚ùå";
        };
    }

    /**
     * –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
     */
    public static InlineKeyboardMarkup createUserSearchKeyboard() {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        
        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(createButton("üîç –ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏", "user:searchByName"));
        row1.add(createButton("üìß –ü–æ–∏—Å–∫ –ø–æ email", "user:searchByEmail"));
        rows.add(row1);
        
        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(createButton("üì± –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É", "user:searchByPhone"));
        row2.add(createButton("üë• –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", "menu:users"));
        rows.add(row2);
        
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(rows);
        return markup;
    }

    /**
     * –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è–º–∏
     */
    public static InlineKeyboardMarkup createDepositsKeyboard() {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        
        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(createButton("‚è≥ –û–∂–∏–¥–∞—é—â–∏–µ", "deposits:pending"));
        row1.add(createButton("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ", "deposits:completed"));
        row1.add(createButton("‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ", "deposits:rejected"));
        rows.add(row1);
        
        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(createButton("üìÜ –ó–∞ —Å–µ–≥–æ–¥–Ω—è", "deposits:today"));
        row2.add(createButton("üìÖ –ó–∞ –Ω–µ–¥–µ–ª—é", "deposits:week"));
        row2.add(createButton("üìÖ –ó–∞ –º–µ—Å—è—Ü", "deposits:month"));
        rows.add(row2);
        
        List<InlineKeyboardButton> row3 = new ArrayList<>();
        row3.add(createButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", "menu:main"));
        rows.add(row3);
        
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(rows);
        return markup;
    }

    /**
     * –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
     */
    public static InlineKeyboardMarkup createSettingsKeyboard() {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        
        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(createButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", "menu:main"));
        rows.add(row1);
        
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(rows);
        return markup;
    }
} 