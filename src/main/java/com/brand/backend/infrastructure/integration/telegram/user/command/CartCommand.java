package com.brand.backend.infrastructure.integration.telegram.user.command;

import com.brand.backend.infrastructure.integration.telegram.user.model.CartItem;
import com.brand.backend.infrastructure.integration.telegram.user.service.CartService;
import com.brand.backend.infrastructure.integration.telegram.user.service.TelegramBotService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.util.ArrayList;
import java.util.List;

/**
 * –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ—Ä–∑–∏–Ω–æ–π –ø–æ–∫—É–ø–æ–∫
 */
@Component
@RequiredArgsConstructor
@Slf4j
public class CartCommand implements Command {

    private final CartService cartService;
    private final TelegramBotService botService;

    @Override
    public String getCommandName() {
        return "/cart";
    }

    @Override
    public void execute(Message message, TelegramBotService bot) {
        Long chatId = message.getChatId();
        showCart(chatId);
    }
    
    /**
     * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * 
     * @param chatId ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    public void showCart(Long chatId) {
        List<CartItem> items = cartService.getCartItems(chatId);
        
        if (items.isEmpty()) {
            String emptyCartMessage = """
                    üõí *–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞*
                    
                    –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É, —á—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑.
                    
                    –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /shop –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤.
                    """;
            botService.sendMessage(chatId.toString(), emptyCartMessage);
            return;
        }
        
        double total = cartService.calculateTotal(chatId);
        
        StringBuilder messageBuilder = new StringBuilder();
        messageBuilder.append("üõí *–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:*\n\n");
        
        for (int i = 0; i < items.size(); i++) {
            CartItem item = items.get(i);
            messageBuilder.append(String.format("%d. %s\n", (i + 1), item));
        }
        
        messageBuilder.append("\nüíµ *–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: %.2f —Ä—É–±.*\n\n");
        messageBuilder.append("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:");
        
        String message = String.format(messageBuilder.toString(), total);
        
        botService.sendMessage(chatId.toString(), message, createCartKeyboard(items));
    }
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å –∫–æ—Ä–∑–∏–Ω–æ–π
     * 
     * @param items —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
     * @return –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π
     */
    private InlineKeyboardMarkup createCartKeyboard(List<CartItem> items) {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rowList = new ArrayList<>();
        
        // –†—è–¥—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        for (int i = 0; i < items.size(); i++) {
            List<InlineKeyboardButton> itemRow = new ArrayList<>();
            
            // –ö–Ω–æ–ø–∫–∞ —É–º–µ–Ω—å—à–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
            InlineKeyboardButton decreaseButton = new InlineKeyboardButton();
            decreaseButton.setText("‚ûñ");
            decreaseButton.setCallbackData("cart_decrease_" + i);
            
            // –ö–Ω–æ–ø–∫–∞ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
            InlineKeyboardButton increaseButton = new InlineKeyboardButton();
            increaseButton.setText("‚ûï");
            increaseButton.setCallbackData("cart_increase_" + i);
            
            // –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
            InlineKeyboardButton removeButton = new InlineKeyboardButton();
            removeButton.setText("üóë");
            removeButton.setCallbackData("cart_remove_" + i);
            
            itemRow.add(decreaseButton);
            itemRow.add(increaseButton);
            itemRow.add(removeButton);
            
            rowList.add(itemRow);
        }
        
        // –†—è–¥ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∏ –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
        List<InlineKeyboardButton> actionRow = new ArrayList<>();
        
        InlineKeyboardButton checkoutButton = new InlineKeyboardButton();
        checkoutButton.setText("‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑");
        checkoutButton.setCallbackData("checkout");
        
        InlineKeyboardButton clearButton = new InlineKeyboardButton();
        clearButton.setText("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É");
        clearButton.setCallbackData("clear_cart");
        
        actionRow.add(checkoutButton);
        actionRow.add(clearButton);
        rowList.add(actionRow);
        
        // –†—è–¥ —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –ø–æ–∫—É–ø–∫–∞–º
        List<InlineKeyboardButton> shopRow = new ArrayList<>();
        
        InlineKeyboardButton shopButton = new InlineKeyboardButton();
        shopButton.setText("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∫—É–ø–∫–∞–º");
        shopButton.setCallbackData("shop");
        
        shopRow.add(shopButton);
        rowList.add(shopRow);
        
        markup.setKeyboard(rowList);
        return markup;
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—á–∏—Å—Ç–∫—É –∫–æ—Ä–∑–∏–Ω—ã
     * 
     * @param chatId ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    public void handleClearCart(Long chatId) {
        cartService.clearCart(chatId);
        
        String message = """
                üóëÔ∏è *–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞*
                
                –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –±—ã–ª–∞ –æ—á–∏—â–µ–Ω–∞. 
                
                –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /shop –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤.
                """;
        
        botService.sendMessage(chatId.toString(), message);
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
     * 
     * @param chatId ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param itemIndex –∏–Ω–¥–µ–∫—Å —Ç–æ–≤–∞—Ä–∞
     */
    public void handleRemoveItem(Long chatId, int itemIndex) {
        boolean removed = cartService.removeFromCart(chatId, itemIndex);
        
        if (removed) {
            String message = "‚úÖ –¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã.";
            botService.sendMessage(chatId.toString(), message);
            showCart(chatId);
        } else {
            String message = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.";
            botService.sendMessage(chatId.toString(), message);
        }
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ 1
     * 
     * @param chatId ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param itemIndex –∏–Ω–¥–µ–∫—Å —Ç–æ–≤–∞—Ä–∞
     */
    public void handleIncreaseQuantity(Long chatId, int itemIndex) {
        List<CartItem> items = cartService.getCartItems(chatId);
        if (itemIndex >= 0 && itemIndex < items.size()) {
            CartItem item = items.get(itemIndex);
            int newQuantity = item.getQuantity() + 1;
            handleUpdateQuantity(chatId, itemIndex, newQuantity);
        } else {
            String message = "‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.";
            botService.sendMessage(chatId.toString(), message);
        }
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É–º–µ–Ω—å—à–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ 1
     * 
     * @param chatId ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param itemIndex –∏–Ω–¥–µ–∫—Å —Ç–æ–≤–∞—Ä–∞
     */
    public void handleDecreaseQuantity(Long chatId, int itemIndex) {
        List<CartItem> items = cartService.getCartItems(chatId);
        if (itemIndex >= 0 && itemIndex < items.size()) {
            CartItem item = items.get(itemIndex);
            int newQuantity = item.getQuantity() - 1;
            // –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –º–µ–Ω—å—à–µ 1, —É–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä
            if (newQuantity < 1) {
                handleRemoveItem(chatId, itemIndex);
            } else {
                handleUpdateQuantity(chatId, itemIndex, newQuantity);
            }
        } else {
            String message = "‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.";
            botService.sendMessage(chatId.toString(), message);
        }
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞
     * 
     * @param chatId ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param itemIndex –∏–Ω–¥–µ–∫—Å —Ç–æ–≤–∞—Ä–∞
     * @param newQuantity –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
     */
    public void handleUpdateQuantity(Long chatId, int itemIndex, int newQuantity) {
        boolean updated = cartService.updateQuantity(chatId, itemIndex, newQuantity);
        
        if (updated) {
            String message = "‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.";
            botService.sendMessage(chatId.toString(), message);
            showCart(chatId);
        } else {
            String message = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.";
            botService.sendMessage(chatId.toString(), message);
        }
    }
} 