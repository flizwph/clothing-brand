package com.brand.backend.infrastructure.integration.telegram.admin.handlers;

import com.brand.backend.infrastructure.integration.telegram.admin.keyboards.AdminKeyboards;
import com.brand.backend.infrastructure.integration.telegram.admin.service.AdminBotService;
import com.brand.backend.domain.promotion.model.PromoCode;
import com.brand.backend.application.promotion.service.PromoCodeService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Arrays;

@Slf4j
@Component
@RequiredArgsConstructor
public class PromoCodeHandler {

    private final PromoCodeService promoCodeService;
    private final AdminBotService adminBotService;
    
    private static final DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm");
    
    // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤–≤–æ–¥–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –ü–†–û–ú–û20 30% 100 –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
    private static final Pattern CREATE_PATTERN = Pattern.compile("^([A-Za-z0-9]+)\\s+(\\d+)%\\s+(\\d+)(?:\\s+(.+))?$");
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
     */
    public SendMessage handleAllPromoCodes(String chatId) {
        List<PromoCode> promoCodes = promoCodeService.getAllPromoCodes();
        
        if (promoCodes.isEmpty()) {
            return createMessage(chatId, "*üîñ –ü—Ä–æ–º–æ–∫–æ–¥—ã*\n\n–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤.", AdminKeyboards.createPromoCodesKeyboard());
        }
        
        StringBuilder message = new StringBuilder("*üîñ –í—Å–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã*\n\n");
        
        for (PromoCode promoCode : promoCodes) {
            message.append(formatPromoCodeShort(promoCode)).append("\n\n");
        }
        
        return createMessage(chatId, message.toString(), AdminKeyboards.createPromoCodesKeyboard());
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
     */
    public SendMessage handleActivePromoCodes(String chatId) {
        List<PromoCode> promoCodes = promoCodeService.getActivePromoCodes();
        
        if (promoCodes.isEmpty()) {
            return createMessage(chatId, "*üîñ –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã*\n\n–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤.", AdminKeyboards.createPromoCodesKeyboard());
        }
        
        StringBuilder message = new StringBuilder("*üîñ –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã*\n\n");
        
        for (PromoCode promoCode : promoCodes) {
            message.append(formatPromoCodeShort(promoCode)).append("\n\n");
        }
        
        return createMessage(chatId, message.toString(), AdminKeyboards.createPromoCodesKeyboard());
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
     */
    public SendMessage handleCreatePromoCodeRequest(String chatId) {
        String text = """
                *‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞*
                
                –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
                `/promo_create –ö–û–î –°–ö–ò–î–ö–ê% –ú–ê–ö–°_–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ô [–û–ü–ò–°–ê–ù–ò–ï]`
                
                –ù–∞–ø—Ä–∏–º–µ—Ä:
                `/promo_create SUMMER2023 15% 100 –õ–µ—Ç–Ω—è—è —Å–∫–∏–¥–∫–∞`
                
                –ü—Ä–æ–º–æ–∫–æ–¥ –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–µ–Ω —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è.
                """;
        
        return createMessage(chatId, text, AdminKeyboards.createBackKeyboard("promo:all"));
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
     */
    public SendMessage handleCreatePromoCode(String chatId, String text) {
        log.info("–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞: {}", text);
        
        Matcher matcher = CREATE_PATTERN.matcher(text);
        
        if (!matcher.matches()) {
            log.warn("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞: {}", text);
            return createMessage(chatId, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n`–ö–û–î –°–ö–ò–î–ö–ê% –ú–ê–ö–°_–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ô [–û–ü–ò–°–ê–ù–ò–ï]`");
        }
        
        String code = matcher.group(1).toUpperCase();
        int discountPercent = Integer.parseInt(matcher.group(2));
        int maxUses = Integer.parseInt(matcher.group(3));
        String description = matcher.group(4) != null ? matcher.group(4) : "";
        
        log.info("–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: –∫–æ–¥={}, —Å–∫–∏–¥–∫–∞={}%, –º–∞–∫—Å.–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π={}, –æ–ø–∏—Å–∞–Ω–∏–µ='{}'",
                code, discountPercent, maxUses, description);
        
        try {
            PromoCode promoCode = promoCodeService.createPromoCode(
                    code, 
                    discountPercent, 
                    maxUses, 
                    LocalDateTime.now(), 
                    null, // –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏
                    description
            );
            
            log.info("–ü—Ä–æ–º–æ–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —Å ID: {}", promoCode.getId());
            
            return createMessage(chatId, 
                    "‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!\n\n" + formatPromoCodeFull(promoCode), 
                    AdminKeyboards.createPromoCodeDetailsKeyboard(promoCode.getId(), promoCode.isActive()));
        } catch (IllegalArgumentException e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞: {}", e.getMessage());
            return createMessage(chatId, "‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
        }
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ–º–æ–∫–æ–¥–∞
     */
    public SendMessage handlePromoCodeDetails(String chatId, Long promoId) {
        try {
            PromoCode promoCode = promoCodeService.getPromoCodeById(promoId)
                    .orElseThrow(() -> new IllegalArgumentException("–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω"));
            
            return createMessage(chatId, 
                    "*üîñ –î–µ—Ç–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞*\n\n" + formatPromoCodeFull(promoCode), 
                    AdminKeyboards.createPromoCodeDetailsKeyboard(promoCode.getId(), promoCode.isActive()));
        } catch (IllegalArgumentException e) {
            return createMessage(chatId, "‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
        }
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏—é –ø—Ä–æ–º–æ–∫–æ–¥–∞
     */
    public EditMessageText handleActivatePromoCode(String chatId, Integer messageId, Long promoId) {
        try {
            PromoCode promoCode = promoCodeService.activatePromoCode(promoId);
            
            return EditMessageText.builder()
                    .chatId(chatId)
                    .messageId(messageId)
                    .text("‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n" + formatPromoCodeFull(promoCode))
                    .parseMode("Markdown")
                    .replyMarkup((InlineKeyboardMarkup) AdminKeyboards.createPromoCodeDetailsKeyboard(promoCode.getId(), promoCode.isActive()))
                    .build();
        } catch (IllegalArgumentException e) {
            return EditMessageText.builder()
                    .chatId(chatId)
                    .messageId(messageId)
                    .text("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage())
                    .parseMode("Markdown")
                    .build();
        }
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—é –ø—Ä–æ–º–æ–∫–æ–¥–∞
     */
    public EditMessageText handleDeactivatePromoCode(String chatId, Integer messageId, Long promoId) {
        try {
            PromoCode promoCode = promoCodeService.deactivatePromoCode(promoId);
            
            return EditMessageText.builder()
                    .chatId(chatId)
                    .messageId(messageId)
                    .text("üö´ –ü—Ä–æ–º–æ–∫–æ–¥ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n" + formatPromoCodeFull(promoCode))
                    .parseMode("Markdown")
                    .replyMarkup((InlineKeyboardMarkup) AdminKeyboards.createPromoCodeDetailsKeyboard(promoCode.getId(), promoCode.isActive()))
                    .build();
        } catch (IllegalArgumentException e) {
            return EditMessageText.builder()
                    .chatId(chatId)
                    .messageId(messageId)
                    .text("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage())
                    .parseMode("Markdown")
                    .build();
        }
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
     */
    public EditMessageText handleDeletePromoCode(String chatId, Integer messageId, Long promoId) {
        try {
            PromoCode promoCode = promoCodeService.getPromoCodeById(promoId)
                    .orElseThrow(() -> new IllegalArgumentException("–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω"));
            
            String promoText = formatPromoCodeFull(promoCode);
            promoCodeService.deletePromoCode(promoId);
            
            return EditMessageText.builder()
                    .chatId(chatId)
                    .messageId(messageId)
                    .text("üóëÔ∏è –ü—Ä–æ–º–æ–∫–æ–¥ —É–¥–∞–ª–µ–Ω!\n\n" + promoText)
                    .parseMode("Markdown")
                    .replyMarkup((InlineKeyboardMarkup) AdminKeyboards.createBackKeyboard("promo:all"))
                    .build();
        } catch (IllegalArgumentException e) {
            return EditMessageText.builder()
                    .chatId(chatId)
                    .messageId(messageId)
                    .text("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage())
                    .parseMode("Markdown")
                    .build();
        }
    }
    
    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è –∫—Ä–∞—Ç–∫–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
     */
    private String formatPromoCodeShort(PromoCode promoCode) {
        StringBuilder result = new StringBuilder();
        
        result.append("*").append(promoCode.getCode()).append("* - ");
        result.append(promoCode.getDiscountPercent()).append("%\n");
        
        result.append(promoCode.isActive() ? "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" : "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω");
        result.append(" | –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω: ").append(promoCode.getUsedCount()).append("/").append(promoCode.getMaxUses());
        
        result.append("\nüëÅ /promo\\_").append(promoCode.getId());
        
        return result.toString();
    }
    
    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
     */
    private String formatPromoCodeFull(PromoCode promoCode) {
        StringBuilder result = new StringBuilder();
        
        result.append("*–ö–æ–¥:* `").append(promoCode.getCode()).append("`\n");
        result.append("*–°–∫–∏–¥–∫–∞:* ").append(promoCode.getDiscountPercent()).append("%\n");
        result.append("*–°—Ç–∞—Ç—É—Å:* ").append(promoCode.isActive() ? "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" : "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω").append("\n");
        result.append("*–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π:* ").append(promoCode.getUsedCount()).append("/").append(promoCode.getMaxUses()).append("\n");
        
        if (promoCode.getStartDate() != null) {
            result.append("*–î–µ–π—Å—Ç–≤—É–µ—Ç —Å:* ").append(promoCode.getStartDate().format(formatter)).append("\n");
        }
        
        if (promoCode.getEndDate() != null) {
            result.append("*–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:* ").append(promoCode.getEndDate().format(formatter)).append("\n");
        }
        
        if (promoCode.getDescription() != null && !promoCode.getDescription().isEmpty()) {
            result.append("*–û–ø–∏—Å–∞–Ω–∏–µ:* ").append(escapeMarkdown(promoCode.getDescription())).append("\n");
        }
        
        result.append("*–°–æ–∑–¥–∞–Ω:* ").append(promoCode.getCreatedAt().format(formatter)).append("\n");
        
        if (promoCode.getUpdatedAt() != null) {
            result.append("*–û–±–Ω–æ–≤–ª–µ–Ω:* ").append(promoCode.getUpdatedAt().format(formatter)).append("\n");
        }
        
        return result.toString();
    }
    
    /**
     * –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Markdown
     */
    private String escapeMarkdown(String text) {
        if (text == null) {
            return "";
        }
        // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Markdown: * _ ` [ ] ( )
        return text.replace("*", "\\*")
                  .replace("_", "\\_")
                  .replace("`", "\\`")
                  .replace("[", "\\[")
                  .replace("]", "\\]")
                  .replace("(", "\\(")
                  .replace(")", "\\)")
                  .replace(".", "\\.")
                  .replace("!", "\\!")
                  .replace("-", "\\-")
                  .replace("+", "\\+")
                  .replace("#", "\\#");
    }
    
    /**
     * –°–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    private SendMessage createMessage(String chatId, String text) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(text);
        message.setParseMode("Markdown");
        return message;
    }
    
    /**
     * –°–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
     */
    private SendMessage createMessage(String chatId, String text, org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboard keyboard) {
        SendMessage message = createMessage(chatId, text);
        message.setReplyMarkup(keyboard);
        return message;
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
     */
    public SendMessage handleEditPromoCodeRequest(String chatId, Long promoId) {
        try {
            PromoCode promoCode = promoCodeService.getPromoCodeById(promoId)
                    .orElseThrow(() -> new IllegalArgumentException("–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω"));
            
            String text = String.format("""
                    *‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞*
                    
                    –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ:
                    –ö–æ–¥: *%s*
                    –°–∫–∏–¥–∫–∞: *%d%%*
                    –ú–∞–∫—Å. –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: *%d*
                    –û–ø–∏—Å–∞–Ω–∏–µ: *%s*
                    
                    –û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
                    `/promo_edit_%d –ö–û–î –°–ö–ò–î–ö–ê%% –ú–ê–ö–°_–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ô [–û–ü–ò–°–ê–ù–ò–ï]`
                    
                    –ù–∞–ø—Ä–∏–º–µ—Ä:
                    `/promo_edit_%d WINTER2023 25%% 200 –ó–∏–º–Ω—è—è —Å–∫–∏–¥–∫–∞`
                    """, 
                    promoCode.getCode(),
                    promoCode.getDiscountPercent(),
                    promoCode.getMaxUses(),
                    promoCode.getDescription() != null ? promoCode.getDescription() : "",
                    promoId,
                    promoId);
            
            return createMessage(chatId, text, AdminKeyboards.createBackKeyboard("promo:details:" + promoId));
        } catch (IllegalArgumentException e) {
            return createMessage(chatId, "‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
        }
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–∞
     */
    public SendMessage handleUpdatePromoCode(String chatId, Long promoId, String code, int discountPercent, int maxUses, String description) {
        log.info("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ {}: –∫–æ–¥={}, —Å–∫–∏–¥–∫–∞={}%, –º–∞–∫—Å.–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π={}, –æ–ø–∏—Å–∞–Ω–∏–µ='{}'",
                promoId, code, discountPercent, maxUses, description);
        
        try {
            // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–º–æ–∫–æ–¥
            PromoCode promoCode = promoCodeService.getPromoCodeById(promoId)
                    .orElseThrow(() -> new IllegalArgumentException("–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω"));
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞
            String oldCode = promoCode.getCode();
            int oldDiscountPercent = promoCode.getDiscountPercent();
            int oldMaxUses = promoCode.getMaxUses();
            String oldDescription = promoCode.getDescription() != null ? promoCode.getDescription() : "";
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–º–æ–∫–æ–¥
            promoCode.setCode(code);
            promoCode.setDiscountPercent(discountPercent);
            promoCode.setMaxUses(maxUses);
            promoCode.setDescription(description);
            promoCode.setUpdatedAt(LocalDateTime.now());
            
            PromoCode updatedPromoCode = promoCodeService.updatePromoCode(promoCode);
            
            // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
            StringBuilder resultMessage = new StringBuilder("‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!\n\n");
            
            resultMessage.append("*–°—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ:*\n");
            resultMessage.append("–ö–æ–¥: `").append(oldCode).append("`\n");
            resultMessage.append("–°–∫–∏–¥–∫–∞: ").append(oldDiscountPercent).append("%\n");
            resultMessage.append("–ú–∞–∫—Å. –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: ").append(oldMaxUses).append("\n");
            if (!oldDescription.isEmpty()) {
                resultMessage.append("–û–ø–∏—Å–∞–Ω–∏–µ: ").append(escapeMarkdown(oldDescription)).append("\n");
            }
            
            resultMessage.append("\n*–ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:*\n");
            resultMessage.append(formatPromoCodeFull(updatedPromoCode));
            
            return createMessage(chatId, resultMessage.toString(), 
                    AdminKeyboards.createPromoCodeDetailsKeyboard(updatedPromoCode.getId(), updatedPromoCode.isActive()));
            
        } catch (IllegalArgumentException e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞: {}", e.getMessage());
            return createMessage(chatId, "‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
        }
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    public SendMessage handleUpdatePromoCode(String chatId, Long promoId, String text) {
        log.info("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞ {}: {}", promoId, text);
        
        Matcher matcher = CREATE_PATTERN.matcher(text);
        
        if (!matcher.matches()) {
            log.warn("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞: {}", text);
            return createMessage(chatId, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n`–ö–û–î –°–ö–ò–î–ö–ê% –ú–ê–ö–°_–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ô [–û–ü–ò–°–ê–ù–ò–ï]`");
        }
        
        // –ü–∞—Ä—Å–∏–º –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        String newCode = matcher.group(1).toUpperCase();
        int newDiscountPercent = Integer.parseInt(matcher.group(2));
        int newMaxUses = Integer.parseInt(matcher.group(3));
        String newDescription = matcher.group(4) != null ? matcher.group(4) : "";
        
        return handleUpdatePromoCode(chatId, promoId, newCode, newDiscountPercent, newMaxUses, newDescription);
    }

    /**
     * –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
     */
    private SendMessage createPromoCodesListMessage(String chatId, List<PromoCode> promoCodes, String title) {
        if (promoCodes == null || promoCodes.isEmpty()) {
            return createMessage(chatId, "*" + title + "*\n\n–ù–µ—Ç –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.");
        }
        StringBuilder message = new StringBuilder();
        message.append("*" + title + "*\n\n");
        for (PromoCode promo : promoCodes) {
            message.append(formatPromoCodeShort(promo)).append("\n\n");
        }
        return createMessage(chatId, message.toString(), AdminKeyboards.createPromoCodesKeyboard());
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
     */
    public SendMessage handleExpiredPromoCodes(String chatId) {
        log.info(">> –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤");
        try {
            List<PromoCode> promoCodes = promoCodeService.getAllPromoCodes();
            List<PromoCode> expired = promoCodes.stream().filter(p -> !p.isActive()).toList();
            return createPromoCodesListMessage(chatId, expired, "–ò—Å—Ç–µ–∫—à–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã");
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤: {}", e.getMessage(), e);
            return createMessage(chatId, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: " + e.getMessage());
        } finally {
            log.info("<< –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤");
        }
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ (–∑–∞–ø—Ä–æ—Å —Ñ–æ—Ä–º—ã)
     */
    public SendMessage handleCreatePromoCode(String chatId) {
        return handleCreatePromoCodeRequest(chatId);
    }
} 