package com.brand.backend.infrastructure.integration.telegram.user.command;

import com.brand.backend.infrastructure.integration.telegram.user.service.TelegramBotService;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.util.ArrayList;
import java.util.List;

/**
 * –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ /start
 */
@Component
@RequiredArgsConstructor
public class StartCommand implements Command {

    @Override
    public void execute(Message message, TelegramBotService bot) {
        String chatId = String.valueOf(message.getChatId());
        bot.sendMessage(chatId, "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.", getMainMenuButtons());
    }

    @Override
    public String getCommandName() {
        return "/start";
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
     */
    private InlineKeyboardMarkup getMainMenuButtons() {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        
        // –ü–µ—Ä–≤—ã–π —Ä—è–¥ –∫–Ω–æ–ø–æ–∫
        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(createButton("üëï –ú–∞–≥–∞–∑–∏–Ω", "shop"));
        row1.add(createButton("üí¨ –ü–æ–º–æ—â—å", "help"));
        rows.add(row1);
        
        // –í—Ç–æ—Ä–æ–π —Ä—è–¥ –∫–Ω–æ–ø–æ–∫ - –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–≤—è–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(createButton("üîó –ü—Ä–∏–≤—è–∑–∞—Ç—å Telegram", "startLinkTelegram"));
        row2.add(createButton("üîó –ü—Ä–∏–≤—è–∑–∞—Ç—å Discord", "startLinkDiscord"));
        rows.add(row2);
        
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(rows);
        return markup;
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –∏ callback-–¥–∞–Ω–Ω—ã–º–∏
     */
    private InlineKeyboardButton createButton(String text, String callbackData) {
        InlineKeyboardButton button = new InlineKeyboardButton();
        button.setText(text);
        button.setCallbackData(callbackData);
        return button;
    }
} 