# ===================================================================
# Logging Configuration
# ===================================================================
logging.level.root=WARN
logging.level.com.brand.backend=INFO
logging.level.org.springframework=WARN
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
logging.level.org.hibernate.type.descriptor.sql=ERROR
logging.level.org.hibernate=ERROR
logging.level.com.zaxxer.hikari=WARN

# ===================================================================
# Database Configuration
# ===================================================================
spring.datasource.url=jdbc:postgresql://localhost:5432/clothingbrand
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=create-drop

# SQL dialect for PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Disable Hibernate banner output
spring.jpa.properties.hibernate.types.print.banner=false

# Disable SQL queries output to console for debugging
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# ===================================================================
# JWT Authentication and Security Tokens
# ===================================================================
# Secret key for JWT token signing
jwt.secret=${JWT_SECRET:VfbJTwagLbTybf0Wq28UZd8GD1PfbwCg6gZlMblkyeE=}
# Access token lifetime in milliseconds (1 hour)
jwt.expiration=${JWT_EXPIRATION:3600000}
# Refresh token lifetime in milliseconds (7 days)
jwt.refreshExpiration=${JWT_REFRESH_EXPIRATION:604800000}

# ===================================================================
# TELEGRAM Bot Settings
# ===================================================================
# Administrator IDs in Telegram messenger
admin.bot.adminIds=825885701,916948327,486377773,979322246,6133963100
admin.bot.enabled=true
# Admin bot token from BotFather
admin.bot.token=7672915154:AAHviB5GSKthP6QvIb7vspcoGjWGtzQKy-M
admin.bot.username=@Obl1v1umAdministrator_bot

# User bot settings
telegram.bot.token=7966511776:AAH5rqOuMVme5-irMuHKOk2Od88s97oGCJc
telegram.bot.username=@obl1vium_bot

# ===================================================================
# DISCORD Integration
# ===================================================================
api.discord.secret-key=${DISCORD_API_SECRET:4f3e2d1c-b5a6-48c7-9d8e-f7g6h5j4k3l2}

# ===================================================================
# HIKARI Connection Pool Settings (Database Performance)
# ===================================================================
# Maximum connections in pool
spring.datasource.hikari.maximum-pool-size=50
# Minimum connections in pool
spring.datasource.hikari.minimum-idle=10
# Connection timeout in milliseconds
spring.datasource.hikari.connection-timeout=20000
# Maximum connection lifetime in milliseconds
spring.datasource.hikari.max-lifetime=1800000
# Keep alive time for inactive connections in milliseconds
spring.datasource.hikari.keepalive-time=60000
# Idle timeout in milliseconds
spring.datasource.hikari.idle-timeout=600000

# ===================================================================
# Database Performance Optimization
# ===================================================================
# Enable prepared statement caching
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
# Prepared statement cache size
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
# Maximum SQL query size for caching
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
# Use server-side prepared statements
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true

# ===================================================================
# Security Settings
# ===================================================================
# Maximum failed login attempts
security.login.max-attempts=10
# Block duration in minutes after exceeding attempt limit
security.login.block-duration-minutes=5
# Administrator email for security notifications
security.alert.email.admin-email=admin@example.com
# Enable/disable email notifications
security.alert.email.enabled=false
# Email for sending security notifications
security.alert.email.from=security-alerts@example.com

# ===================================================================
# EMAIL Settings
# ===================================================================
spring.mail.host=smtp.yandex.ru
spring.mail.port=587
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ===================================================================
# Database Migration Settings
# ===================================================================
# Disable automatic Flyway migrations
spring.flyway.enabled=false

# ===================================================================
# Server Settings
# ===================================================================
# Port on which the application runs (default 8080)
server.port=8080

# Allow circular references in Spring
spring.main.allow-circular-references=true
# Allow bean overriding
spring.main.allow-bean-definition-overriding=true

# Legacy API settings
api.legacy.deprecation-message=This API endpoint is deprecated. Please use /api/auth/v2 endpoints instead.
api.legacy.redirect-enabled=false
api.legacy.direct-implementation=false

# ===================================================================
# VK Bot Settings
# ===================================================================
# VK group access token
vk.access-token=${VK_ACCESS_TOKEN:}
# VK group ID
vk.group-id=${VK_GROUP_ID:0}
# Secret key for Callback API
vk.secret-key=${VK_SECRET_KEY:}
# Confirmation string for Callback API
vk.confirmation-token=${VK_CONFIRMATION_TOKEN:}
# VK API version
vk.api-version=5.131
# Webhook URL
vk.webhook-url=${VK_WEBHOOK_URL:}
# Bot enabled flag
vk.enabled=${VK_ENABLED:false}
# Long Polling timeout in seconds
vk.long-poll-timeout=25 