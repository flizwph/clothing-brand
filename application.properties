# Диалект SQL для работы с PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Отключение вывода баннера Hibernate
spring.jpa.properties.hibernate.types.print.banner=false

# Отключение вывода SQL-запросов в консоль для отладки
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# ===================================================================
# JWT аутентификация (авторизационные и защитные токены)
# ===================================================================
# Секретный ключ для подписи JWT токенов
jwt.secret=${JWT_SECRET:VfbJTwagLbTybf0Wq28UZd8GD1PfbwCg6gZlMblkyeE=}
# Время жизни access токена в миллисекундах (1 час)
jwt.expiration=${JWT_EXPIRATION:3600000}
# Время жизни refresh токена в миллисекундах (7 дней)
jwt.refreshExpiration=${JWT_REFRESH_EXPIRATION:604800000}

# ===================================================================
# Настройки TELEGRAM ботов
# ===================================================================
# ID администраторов в Telegram мессенджере
admin.bot.adminIds=825885701,916948327,486377773,979322246,6133963100
# Токен администраторского бота от BotFather
admin.bot.token=7672915154:AAHviB5GSKthP6QvIb7vspcoGjWGtzQKy-M
admin.bot.username=@Obl1v1umAdministrator_bot

# Настройки пользовательского бота
telegram.bot.token=7966511776:AAH5rqOuMVme5-irMuHKOk2Od88s97oGCJc
telegram.bot.username=@obl1vium_bot

# ===================================================================
# Интеграция с DISCORD
# ===================================================================
api.discord.secret-key=${DISCORD_API_SECRET:4f3e2d1c-b5a6-48c7-9d8e-f7g6h5j4k3l2}

# ===================================================================
# Настройки пула соединений HIKARI (производительность базы данных)
# ===================================================================
# Максимальное количество соединений в пуле
spring.datasource.hikari.maximum-pool-size=50
# Минимальное количество соединений в пуле
spring.datasource.hikari.minimum-idle=10
# Таймаут соединения в миллисекундах
spring.datasource.hikari.connection-timeout=20000
# Максимальное время жизни соединения в миллисекундах
spring.datasource.hikari.max-lifetime=1800000
# Время поддержания неактивного соединения в миллисекундах
spring.datasource.hikari.keepalive-time=60000
# Время простоя соединения в миллисекундах
spring.datasource.hikari.idle-timeout=600000

# ===================================================================
# Оптимизация производительности базы данных
# ===================================================================
# Включение кэширования подготовленных запросов
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
# Размер кэша подготовленных запросов
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
# Максимальный размер SQL запроса для кэширования
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
# Использование подготовленных запросов на стороне сервера
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true

# ===================================================================
# Настройки безопасности
# ===================================================================
# Максимальное количество неудачных попыток входа
security.login.max-attempts=10
# Длительность блокировки в минутах после превышения лимита попыток
security.login.block-duration-minutes=5
# Email администратора для получения оповещений безопасности
security.alert.email.admin-email=admin@example.com
# Включение/отключение оповещений по email
security.alert.email.enabled=false
# Email для отправки оповещений безопасности
security.alert.email.from=security-alerts@example.com

# ===================================================================
# Настройки отправки EMAIL
# ===================================================================
spring.mail.host=smtp.yandex.ru
spring.mail.port=587
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ===================================================================
# Настройки миграции базы данных
# ===================================================================
# Отключение автоматических миграций Flyway
spring.flyway.enabled=false

# ===================================================================
# Настройки сервера
# ===================================================================
# Порт, на котором запускается приложение (по умолчанию 8080)
server.port=8080

# Разрешение циклических зависимостей в Spring
spring.main.allow-circular-references=true
# Разрешение переопределения бинов
spring.main.allow-bean-definition-overriding=true

# Настройки устаревшего API
api.legacy.deprecation-message=This API endpoint is deprecated. Please use /api/auth/v2 endpoints instead.
api.legacy.redirect-enabled=false
api.legacy.direct-implementation=false 